{"version":3,"sources":["ChatGpt/ChatGPTIntialize.js","ChatGpt/index.js","index.js"],"names":["prompt","a","configuration","Configuration","apiKey","process","openai","OpenAIApi","createCompletion","model","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","stop","response","data","choices","text","muiTheme","createTheme","palette","primary","main","Chat","React","useState","ChatController","showDateTime","chatCtl","useMemo","echo","handleSubmit","TestChatGpt","then","res","addMessage","type","content","self","avatar","setActionRequest","placeholder","value","ThemeProvider","theme","CssBaseline","Box","sx","height","backgroundColor","display","flexDirection","maxWidth","marginLeft","marginRight","bgcolor","opacity","flex","minHeight","chatController","require","config","rootElement","document","getElementById","ReactDOM","render","className"],"mappings":"ySAEO,WAA2BA,GAA3B,mBAAAC,EAAA,6DACGC,EAAgB,IAAIC,gBAAc,CACpCC,OAAQC,wDAGNC,EAAS,IAAIC,YAAUL,GAL1B,SAOsBI,EAAOE,iBAAiB,CAC7CC,MAAO,mBACPT,OAAQA,EACRU,YAAa,GACbC,WAAY,IACZC,MAAO,EACPC,kBAAmB,EACnBC,iBAAkB,GAClBC,KAAM,CAAC,UAAW,UAfnB,cAOIC,EAPJ,yBAiBIA,EAASC,KAAKC,QAAQ,GAAGC,MAjB7B,4C,iCCkBDC,EAAWC,YAAY,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,cAKL,SAASC,IACd,MAAkBC,IAAMC,SACtB,IAAIC,iBAAe,CACjBC,cAAc,KAFXC,EAAP,oBAKAJ,IAAMK,SAAQ,WACZC,EAAKF,KACJ,CAACA,IACJ,IAAMG,EAAe,SAACjC,IDnCjB,SAAP,mCCoCKkC,CAAYlC,GAAQmC,MAAK,SAACC,GACzBN,EAAQO,WAAW,CACjBC,KAAM,OACNC,QAASH,EACTI,MAAM,EACNC,OAAQ,UAfO,SAmBNT,EAnBM,8EAmBrB,WAAoBF,GAApB,eAAA7B,EAAA,sEACuB6B,EAAQY,iBAAiB,CAC5CJ,KAAM,OACNK,YAAa,2BAHjB,OACQ3C,EADR,OAKEiC,EAAajC,EAAO4C,OACpBZ,EAAKF,GANP,2CAnBqB,wBA2BrB,OACE,eAACe,EAAA,EAAD,CAAeC,MAAO1B,EAAtB,UACE,cAAC2B,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,OAAQ,SAAUC,gBAAiB,SAA9C,SACE,cAACH,EAAA,EAAD,CACEC,GAAI,CACFG,QAAS,OACTC,cAAe,SACfH,OAAQ,OACRI,SAAU,QACVC,WAAY,OACZC,YAAa,OACbC,QAAS,QACTC,QAAQ,IATZ,SAYE,cAACV,EAAA,EAAD,CAAKC,GAAI,CAAEU,KAAM,SAAUC,UAAW,GAAtC,SACE,cAAC,UAAD,CAASC,eAAgB/B,a,OCnEzBgC,EAAQ,KAChBC,SAEJ,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,qBAAKC,UAAU,YAAf,SACA,cAAE5C,EAAF,QAGFuC,K","file":"static/js/main.ef2d3661.chunk.js","sourcesContent":["import  { Configuration, OpenAIApi }  from 'openai';\n\nexport async function TestChatGpt(prompt) {\n    const configuration = new Configuration({\n        apiKey: process.env.REACT_APP_SECRET_KEY\n      });\n    \n    const openai = new OpenAIApi(configuration);\n    \n     const response =  await openai.createCompletion({\n        model: \"text-davinci-003\",\n        prompt: prompt,\n        temperature: 0.9,\n        max_tokens: 150,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0.6,\n        stop: [\" Human:\", \" AI:\"],\n      });\n    return response.data.choices[0].text;\n}","import axios from \"axios\";\nimport {\n  Box,\n  Button,\n  CssBaseline,\n  Divider,\n  Link,\n  ThemeProvider,\n  Typography,\n  createTheme,\n} from \"@mui/material\";\nimport {\n  ActionRequest,\n  AudioActionResponse,\n  ChatController,\n  FileActionResponse,\n  MuiChat,\n} from \"chat-ui-react\";\nimport React from \"react\";\n\nconst muiTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#007aff\",\n    },\n  },\n});\nimport {TestChatGpt} from './ChatGPTIntialize';\nexport function Chat() {\n  const [chatCtl] = React.useState(\n    new ChatController({\n      showDateTime: true,\n    })\n  );\n  React.useMemo(() => {\n    echo(chatCtl);\n  }, [chatCtl]);\n  const handleSubmit = (prompt) => {\n     TestChatGpt(prompt).then((res)=>{\n      chatCtl.addMessage({\n        type: \"text\",\n        content: res,\n        self: false,\n        avatar: \"-\",\n      });\n    })\n  };\n  async function echo(chatCtl) {\n    const prompt = await chatCtl.setActionRequest({\n      type: \"text\",\n      placeholder: \"Please enter something\",\n    });\n    handleSubmit(prompt.value);\n    echo(chatCtl);\n  }\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <CssBaseline />\n      <Box sx={{ height: \"1000px\", backgroundColor: \"black\"}}>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            maxWidth: \"640px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            bgcolor: \"black\",\n            opacity:0.6 \n          }}\n        >\n          <Box sx={{ flex: \"1 1 0%\", minHeight: 0 }}>\n            <MuiChat chatController={chatCtl} />\n          </Box>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Chat } from \"./ChatGpt\";\nimport \"./styles.css\";\n\nconst env = require('dotenv');\nenv.config();\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <div className=\"container\">\n    < Chat/>\n    </div>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}